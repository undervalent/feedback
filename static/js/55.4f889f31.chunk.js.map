{"version":3,"file":"static/js/55.4f889f31.chunk.js","mappings":"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","sources":["components/button/button.styles.ts","components/button/button.component.tsx","lib/constants/dropdown-values.ts","lib/constants/error-messages.ts","lib/constants/index.ts","lib/hooks/useDevice.ts","lib/hooks/useRoadMapData.ts","lib/hooks/useSelectedFeedbackItem.ts","lib/hooks/utils/index.ts","lib/hooks/useLocationFrom.ts","lib/hooks/useReplyToState.ts","lib/utils/index.ts","state/utils/index.ts","state/index.ts"],"sourcesContent":["import styled from \"styled-components\";\nimport media from \"styled-media-query\";\nimport { ButtonVariant } from \"./types\";\nimport { Link } from \"react-router-dom\";\nconst variantColors = {\n  primary: {\n    normal: \"var(--primary-alpha)\",\n    hover: \"#C75AF6\",\n  },\n  secondary: {\n    normal: \"var(--primary-bravo)\",\n    hover: \"#7C91F9\",\n  },\n  tertiary: {\n    normal: \"var(--dark-bravo)\",\n    hover: \"#656EA3\",\n  },\n  danger: {\n    normal: \"var(--danger-alpha)\",\n    hover: \"var(--danger-bravo)\",\n  },\n  back: {\n    normal: \"\",\n    hover: \"\",\n  },\n  solidback: {\n    normal: \"var(--dark-alpha)\",\n    hover: \"\",\n  },\n};\n\nexport const ButtonWrapper = styled.button<{ variant: ButtonVariant }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 100%;\n  height: ${({ variant }) => (variant === \"solidback\" ? \"5.3rem\" : \"4.4rem\")};\n  border-radius: 1rem;\n  font-weight: 700;\n  font-size: 1.4rem;\n  line-height: 2rem;\n  cursor: pointer;\n  color: ${({ variant }) =>\n    variant !== \"back\" ? \"var(--light-bravo)\" : \"var(--dark-charlie)\"};\n  background-color: ${({ variant }) =>\n    variant !== \"back\" ? variantColors[variant].normal : \"\"};\n  &:hover {\n    background-color: ${({ variant }) =>\n      variant.includes(\"back\") ? \"\" : variantColors[variant].hover};\n    text-decoration: ${({ variant }) =>\n      variant.includes(\"back\") ? \"underline\" : \"none\"};\n  }\n  svg {\n    margin-right: 1rem;\n  }\n`;\n\nexport const StyledLinkButton = styled(Link)<{ variant: ButtonVariant }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 15.8rem;\n  height: ${({ variant }) => (variant === \"solidback\" ? \"5.3rem\" : \"4.4rem\")};\n  border-radius: 1rem;\n  font-weight: 700;\n  font-size: 1.4rem;\n  line-height: 2rem;\n  cursor: pointer;\n  color: ${({ variant }) =>\n    variant !== \"back\" ? \"var(--light-bravo)\" : \"var(--dark-charlie)\"};\n  background-color: ${({ variant }) =>\n    variant !== \"back\" ? variantColors[variant].normal : \"\"};\n  &:hover {\n    background-color: ${({ variant }) =>\n      variant.includes(\"back\") ? \"\" : variantColors[variant].hover};\n    text-decoration: ${({ variant }) =>\n      variant.includes(\"back\") ? \"underline\" : \"none\"};\n  }\n  svg {\n    margin-right: 1rem;\n  }\n  text-decoration: none;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport { ButtonVariant } from \"./types\";\nimport { ButtonWrapper } from \"./button.styles\";\nimport { FaAngleLeft } from \"react-icons/fa\";\ninterface IProps {\n  variant: ButtonVariant;\n  icon?: boolean;\n  onClick?(): void;\n  children: React.ReactNode;\n}\nconst getIconColor = (variant: ButtonVariant) =>\n  variant === \"solidback\" ? \"#f2f4ff\" : \"#647196\";\n\nexport const Button: React.FC<IProps> = ({\n  variant,\n  children,\n  onClick,\n  ...rest\n}) => {\n  const iconColor = getIconColor(variant);\n  return (\n    <ButtonWrapper variant={variant} onClick={onClick} {...rest}>\n      {variant.includes(\"back\") && <FaAngleLeft color={iconColor} />}\n      {children}\n    </ButtonWrapper>\n  );\n};\n","export const categoryOptions = [\n  {\n    label: \"Feature\",\n    value: \"feature\",\n  },\n  {\n    label: \"UI\",\n    value: \"ui\",\n  },\n  {\n    label: \"UX\",\n    value: \"ux\",\n  },\n  {\n    label: \"Enhancement\",\n    value: \"enhancement\",\n  },\n  {\n    label: \"Bug\",\n    value: \"bug\",\n  },\n];\n\nexport const statusOptions = [\n  {\n    label: \"Suggestion\",\n    value: \"suggestion\",\n  },\n  {\n    label: \"Planned\",\n    value: \"planned\",\n  },\n  {\n    label: \"In-Progress\",\n    value: \"in-progress\",\n  },\n  {\n    label: \"Live\",\n    value: \"live\",\n  },\n];\n","export const errors = {\n  emptyText: \"Cannot be empty\",\n  characterCount: (maxCount: number) =>\n    `Must be less than ${maxCount} characters`,\n};\n","export type IRoadMapName = \"in-progress\" | \"planned\" | \"live\";\nexport const roadMapNameColors = {\n  \"in-progress\": \"var(--primary-alpha)\",\n  planned: \"var(--primary-charlie)\",\n  live: \"var(--primary-delta)\",\n};\nexport * from \"./dropdown-values\";\nexport * from \"./error-messages\";\n","import React from \"react\";\nimport { useWindowSize } from \"rooks\";\n\nexport function useDeviceType(outerWidth: number | null) {\n  if (!outerWidth || outerWidth <= 450) {\n    return \"mobile\";\n  }\n  if (outerWidth <= 768) {\n    return \"tablet\";\n  }\n  return \"desktop\";\n}\n\nexport function useDevice() {\n  const [deviceType, setDeviceType] = React.useState<\n    \"mobile\" | \"tablet\" | \"desktop\"\n  >(\"mobile\");\n  const { outerWidth } = useWindowSize();\n  const device = useDeviceType(outerWidth);\n\n  React.useEffect(() => {\n    setDeviceType(device);\n\n    return () => {};\n  }, [device]);\n\n  return deviceType;\n}\n","import _ from \"lodash\";\nimport { useRecoilValue } from \"recoil\";\nimport { roadMapSelector } from \"../../state\";\nimport { roadMapNameColors } from \"../constants\";\n\nexport function useRoadMapData() {\n  const roadMapData = useRecoilValue(roadMapSelector);\n  const keys = _.keys(roadMapData);\n  return [{ roadMapData, keys, roadMapNameColors }];\n}\n","import React from \"react\";\nimport { useRecoilState, useRecoilValue, useResetRecoilState } from \"recoil\";\nimport {\n  requestItemState,\n  activeUser,\n  replyToState,\n  clickedUpvoteState,\n} from \"../../state\";\n\nimport {\n  updateCount,\n  generateComment,\n  updateItemWithComment,\n  updateItemReplies,\n} from \"./utils\";\n\n/**\n * It returns the request item state for the given id.\n * @param {string | undefined} id - string | undefined\n * @returns The request item state.\n */\nexport function useSelectedFeedbackItem(id: string | undefined): [\n  state: {\n    requestItem: any;\n    comments: any;\n    hasUpVoted: boolean;\n  },\n  handlers: {\n    incrementCount(): void;\n    addNewComment(comment: string): void;\n    addNewReply(reply: string): void;\n  }\n] {\n  const [requestItem, setRequestItem] = useRecoilState(requestItemState(id));\n  const [upvotes, setUpvotes] = useRecoilState(clickedUpvoteState);\n  const hasComments = requestItem && Boolean(requestItem?.comments);\n  const comments = (hasComments && requestItem.comments) || [];\n  const user = useRecoilValue(activeUser);\n  const replyToInfo = useRecoilValue(replyToState);\n  const resetReplyTo = useResetRecoilState(replyToState);\n  const hasUpVoted = Boolean(id && upvotes?.[id]);\n\n  const handlers = React.useMemo(\n    () => ({\n      incrementCount: () => {\n        if (!id || !requestItem) return;\n        const newItem = updateCount(requestItem);\n        setRequestItem(newItem);\n        setUpvotes((prev) => {\n          return {\n            ...prev,\n            [id]: true,\n          };\n        });\n      },\n      addNewComment: (comment: string) => {\n        if (!id || !requestItem) return;\n        const newComment = generateComment({\n          user,\n          content: comment,\n        });\n        const newItem = updateItemWithComment({ requestItem, newComment });\n        setRequestItem(newItem);\n      },\n      addNewReply: (reply: string) => {\n        const newReply = {\n          content: reply,\n          replyingTo: replyToInfo.username,\n          user,\n        };\n        if (!id || !requestItem) return;\n        const newItem = updateItemReplies(requestItem, replyToInfo, newReply);\n        setRequestItem(newItem);\n        resetReplyTo();\n      },\n    }),\n    /* Creating a new type called \"Request\" and it is setting the properties of the type. */\n    [id, replyToInfo, requestItem, setRequestItem, user]\n  );\n  const state = { requestItem, comments, hasUpVoted };\n  return [state, handlers];\n}\n","import _ from \"lodash\";\nimport { nanoid } from \"nanoid\";\n\nimport { IComment, ProductRequest, IUser, IReply } from \"../../types\";\n\nexport function getItemIndex(allItems: ProductRequest[], id: string) {\n  const index = allItems.findIndex((el) => el.id === id);\n  return index;\n}\n\nexport function updateCount(requestItem: ProductRequest) {\n  const updatedItem = { ...requestItem };\n  _.set(updatedItem, \"upvotes\", updatedItem.upvotes + 1);\n  return updatedItem;\n}\n\nexport function generateComment(commentData: { user: IUser; content: string }) {\n  const comment = {\n    id: nanoid(),\n    replies: [],\n    ...commentData,\n  };\n\n  return comment;\n}\n\nexport function updateItemWithComment({\n  requestItem,\n  newComment,\n}: {\n  requestItem: ProductRequest;\n  newComment: IComment;\n}) {\n  const newItem = { ...requestItem };\n  const comments: IComment[] = _.get(newItem, \"comments\", []);\n  const newComments = [...comments, newComment];\n  _.set(newItem, \"comments\", newComments);\n  return newItem;\n}\n\nexport function updateItemReplies(\n  requestItem: ProductRequest,\n  replyToInfo: {\n    username: string;\n    commentId: string;\n  },\n  newReply: IReply\n) {\n  const newItem = _.cloneDeep(requestItem);\n  const comments = _.get(newItem, \"comments\", []);\n  const idx = comments.findIndex((el) => el.id === replyToInfo.commentId);\n  const allReplies = _.get({ ...requestItem }, `comments[${idx}].replies`, []);\n  _.set(newItem, `comments[${idx}].replies`, [...allReplies, newReply]);\n  return newItem;\n}\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\ninterface CustomState {\n  from?: string;\n}\n\nexport function useLocationFrom() {\n  const location = useLocation();\n  const { from } = location.state as CustomState;\n  const state = {\n    from: from || \"/\",\n  };\n  return [state];\n}\n","import React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { replyToState } from \"../../state\";\n\ninterface IReplyToState {\n  username: string;\n  commentId: string;\n}\n\nexport function useReplyToState(): [\n  handlers: {\n    setReplyingTo(state: IReplyToState): void;\n  }\n] {\n  const setReplying = useSetRecoilState(replyToState);\n\n  const handlers = React.useMemo(\n    () => ({\n      setReplyingTo: (replyToInfo: IReplyToState) => setReplying(replyToInfo),\n    }),\n    [setReplying]\n  );\n\n  return [handlers];\n}\n","import _ from \"lodash\";\nimport { ProductRequest, IComment } from \"../types\";\n\n/**\n * \"Given a string, return a dictionary with two keys: color and title.\"\n * @param {string} name - The name of the status.\n * @returns The color and title of the data.\n */\nexport function getDataByName(name: string) {\n  switch (name) {\n    case \"in-progress\":\n      return {\n        color: \"var(--primary-alpha)\",\n        title: \"Currently being developed\",\n      };\n    case \"planned\":\n      return {\n        color: \"var(--primary-charlie)\",\n        title: \"Ideas prioritized for research\",\n      };\n    case \"live\":\n      return { color: \"var(--primary-delta)\", title: \"Released features\" };\n    default:\n      return { color: \"transparent\", title: \"\" };\n  }\n}\n\n/**\n * Cannot generate summary\n * @param keys - an array of strings that are the keys of the data object\n * @param {any} data - the data object that we're working with\n * @returns A Record of the data that is being returned.\n */\nexport function makeRoadMapObject(keys: string[], data: any) {\n  return keys.reduce((acc, key) => {\n    acc[key] = {\n      panelName: _.startCase(key),\n      requests: data[key],\n      ...getDataByName(key),\n    };\n    return acc;\n  }, <Record<string, { color: string; title: string; requests: ProductRequest[]; panelName: string }>>{});\n}\n\nexport function generateCommentCount(comments: IComment[] | undefined): number {\n  if (!comments) return 0;\n  const totalCount = comments.reduce((acc: number, comment: IComment) => {\n    const counter = acc + 1;\n    const repliesCounter = comment?.replies ? comment.replies.length : 0;\n    return counter + repliesCounter;\n  }, 0);\n  return totalCount;\n}\n","import _ from \"lodash\";\nimport { ProductRequest } from \"../../lib/types\";\nimport { makeRoadMapObject, generateCommentCount } from \"../../lib/utils\";\n\nconst includedRoadMapItems = [\"planned\", \"in-progress\", \"live\"];\n\nexport function filterProductRequestByStatus(requests: ProductRequest[]) {\n  const roadMapRequests = requests.filter((el) =>\n    includedRoadMapItems.includes(el.status)\n  );\n  const data = _.groupBy(roadMapRequests, \"status\");\n  const keys = _.keys(data);\n  const output = makeRoadMapObject(keys, data);\n\n  return output;\n}\n\nexport function filterProductRequestByCategory(requests: ProductRequest[]) {\n  const categories = requests.map((el) => _.capitalize(el.category));\n  return [\"All\", ..._.uniq(categories)];\n}\n\nexport function getCommentCount(requests: ProductRequest[]) {\n  return [...requests].map((el) => {\n    const commentCount = el?.comments ? generateCommentCount(el.comments) : 0;\n    return {\n      ...el,\n      commentCount,\n    };\n  });\n}\n","import { atom, selector, atomFamily, selectorFamily } from \"recoil\";\nimport _ from \"lodash\";\nimport data from \"../data/data.json\";\nimport { DropdownValue } from \"../lib/types\";\nimport { ProductRequest } from \"../lib/types/index\";\nimport {\n  filterProductRequestByStatus,\n  filterProductRequestByCategory,\n  getCommentCount,\n} from \"./utils\";\n\nconst { currentUser, productRequests } = data;\n\nexport const requestsAPI = atom({\n  key: \"requestsAPI\",\n  default: productRequests,\n});\nexport const activeUser = atom({\n  key: \"currentUser\",\n  default: currentUser,\n});\n\nexport const roadMapSelector = selector({\n  key: \"roadMapSelector\",\n  get: ({ get }) => {\n    const requests = get(requestsAPI);\n    return filterProductRequestByStatus(requests);\n  },\n});\n\nexport const filterSelector = selector({\n  key: \"filterSelector\",\n  get: ({ get }) => {\n    const requests = get(requestsAPI);\n    return filterProductRequestByCategory(requests);\n  },\n});\n\nexport const activeFiltersState = atom({\n  key: \"activeFilters\",\n  default: [\"all\"],\n});\nexport const filteredRequests = selector({\n  key: \"filteredRequests\",\n  get: ({ get }) => {\n    const data = get(requestsAPI);\n    const filters = get(activeFiltersState);\n    const { value, orderBy } = get(sortByState);\n    const filtered =\n      filters[0] === \"all\"\n        ? data\n        : data.filter((el) => filters.includes(el.category));\n    const ouptut = getCommentCount(filtered);\n\n    return _.orderBy(ouptut, [value], [orderBy]);\n  },\n});\n\nexport const sortByState = atom<DropdownValue>({\n  key: \"sortBy\",\n  default: {\n    label: \"Most Upvotes\",\n    value: \"upvotes\",\n    orderBy: \"desc\",\n  },\n});\n\nexport const requestItemState = atomFamily({\n  key: \"requestItem\",\n  default: selectorFamily({\n    key: \"requestItem/Default\",\n    get:\n      (param: string | undefined) =>\n      ({ get }) => {\n        if (!param) return null;\n        const requests = get(requestsAPI);\n\n        const filtered = requests.filter((el) => el.id === param)[0];\n\n        return filtered;\n      },\n  }),\n});\n\nexport const toggleDrawerState = atom<boolean>({\n  key: \"toggleDrawerState\",\n  default: false,\n});\nexport const replyToState = atom<{\n  username: string;\n  commentId: string;\n}>({\n  key: \"replyToState\",\n  default: {\n    username: \"\",\n    commentId: \"\",\n  },\n});\n\ninterface Upvotes {\n  [key: string]: boolean;\n}\n\nexport const clickedUpvoteState = atom<Upvotes>({\n  key: \"clickedUpvoteState\",\n  default: {},\n});\n"],"names":["variantColors","primary","normal","hover","secondary","tertiary","danger","back","solidback","ButtonWrapper","styled","variant","includes","StyledLinkButton","Link","Button","children","onClick","rest","iconColor","getIconColor","color","categoryOptions","label","value","statusOptions","errors","emptyText","characterCount","maxCount","roadMapNameColors","planned","live","useDevice","React","deviceType","setDeviceType","device","outerWidth","useDeviceType","useWindowSize","useRoadMapData","roadMapData","useRecoilValue","roadMapSelector","keys","_","useSelectedFeedbackItem","id","useRecoilState","requestItemState","requestItem","setRequestItem","clickedUpvoteState","upvotes","setUpvotes","comments","Boolean","user","activeUser","replyToInfo","replyToState","resetReplyTo","useResetRecoilState","hasUpVoted","handlers","incrementCount","newItem","updatedItem","updateCount","prev","addNewComment","comment","commentData","newComment","content","nanoid","replies","newComments","updateItemWithComment","addNewReply","reply","newReply","replyingTo","username","idx","findIndex","el","commentId","allReplies","updateItemReplies","useLocationFrom","from","useLocation","state","useReplyToState","setReplying","useSetRecoilState","setReplyingTo","makeRoadMapObject","data","reduce","acc","key","panelName","requests","name","title","getDataByName","generateCommentCount","length","includedRoadMapItems","currentUser","productRequests","requestsAPI","atom","default","selector","get","roadMapRequests","filter","status","filterProductRequestByStatus","filterSelector","categories","map","category","filterProductRequestByCategory","activeFiltersState","filteredRequests","filters","sortByState","orderBy","filtered","ouptut","commentCount","atomFamily","selectorFamily","param","toggleDrawerState"],"sourceRoot":""}