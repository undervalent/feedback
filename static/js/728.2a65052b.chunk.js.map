{"version":3,"file":"static/js/728.2a65052b.chunk.js","mappings":"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","sources":["components/dropdowns/dropdown/dropdown.styles.ts","components/dropdowns/dropdown/dropdown.component.tsx","components/dropdowns/form-dropdown/form-dropdown.styles.ts","components/dropdowns/form-dropdown/form-dropdown.tsx","components/form-input/form-input.styles.ts","components/form-input/form-input.component.tsx","components/styled-link/styled-link.component.tsx","components/styled-link/styled-link.styles.ts","views/new-feedback/components/header/header.styles.ts","views/new-feedback/components/header/header.component.tsx","assets/shared/icon-new-feedback.svg","views/new-feedback/components/feedback-form/feedback-form.styles.ts","views/new-feedback/components/feedback-form/feedback-form.component.tsx","views/new-feedback/new-feedback.component.tsx","views/shared/styles/form.ts"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  [data-reach-menu-button] {\n    border-radius: 10px !important;\n    color: var(--light-bravo) !important;\n    height: 7.2rem !important;\n    width: 19.4rem !important;\n    font-size: 1.4rem;\n    line-height: 2rem;\n  }\n\n  .dropdown-span {\n    font-weight: 700;\n    font-size: 1.4rem;\n    line-height: 2rem;\n  }\n`;\n","import \"./dropdown.styles.css\";\nimport React from \"react\";\nimport { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\nimport { useRecoilState } from \"recoil\";\nimport { FaCheck } from \"react-icons/fa\";\nimport { DropdownValue } from \"../../../lib/types\";\nimport { sortByState } from \"../../../state\";\n\nimport { Wrapper } from \"./dropdown.styles\";\n\nconst values: DropdownValue[] = [\n  {\n    label: \"Most Upvotes\",\n    value: \"upvotes\",\n    orderBy: \"desc\",\n  },\n  {\n    label: \"Least Upvotes\",\n    value: \"upvotes\",\n    orderBy: \"asc\",\n  },\n  {\n    label: \"Most Comments\",\n    value: \"commentCount\",\n    orderBy: \"desc\",\n  },\n  {\n    label: \"Least Comments\",\n    value: \"commentCount\",\n    orderBy: \"asc\",\n  },\n];\n\nexport const Dropdown = () => {\n  const [sortBy, setSortBy] = useRecoilState(sortByState);\n\n  return (\n    <Wrapper>\n      <Menu>\n        <MenuButton>\n          Sort by: <span className=\"dropdown-span\">{sortBy.label}</span>\n          <span aria-hidden>▾</span>\n        </MenuButton>\n        <MenuList>\n          {values.map((el) => (\n            <MenuItem key={el.label} onSelect={() => setSortBy(el)}>\n              {el.label}{\" \"}\n              {el.label === sortBy.label && (\n                <FaCheck color=\"rgba(173, 31, 234, 1)\" />\n              )}\n            </MenuItem>\n          ))}\n        </MenuList>\n      </Menu>\n    </Wrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  margin-top: 1.6rem;\n\n  [data-reach-menu-button] {\n    color: var(--dark-bravo) !important;\n    background: var(--light-charlie) !important;\n    border-radius: 0.5rem !important;\n    font-size: 1.5rem !important;\n    line-height: 2.2rem !important;\n    width: 100%;\n    height: 4.8rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 1.3rem 2.4rem;\n    font-weight: 400 !important;\n  }\n`;\n","import React from \"react\";\nimport { Menu, MenuList, MenuButton, MenuItem } from \"@reach/menu-button\";\nimport { FaCheck } from \"react-icons/fa\";\nimport { Wrapper } from \"./form-dropdown.styles\";\nimport { Label, Span } from \"../../form-input\";\n\ninterface IDropDownValues {\n  label: string;\n  value: string;\n}\n\ninterface IProps {\n  label?: string;\n  description?: string;\n  id: string;\n  options: IDropDownValues[];\n  selectedValue: IDropDownValues;\n  setSelected(value: IDropDownValues): void;\n}\n\nexport const FormDropdown: React.FC<IProps> = (props) => {\n  const { label, description, id, options, selectedValue, setSelected } = props;\n\n  const selectedLabel = selectedValue ? selectedValue?.label : options[0].label;\n  return (\n    <Wrapper>\n      <Label htmlFor={id}>{label}</Label>\n      <Span>{description}</Span>\n      <Menu id={id}>\n        <MenuButton>\n          <span className=\"dropdown-span\">{selectedLabel}</span>\n          <span aria-hidden>▾</span>\n        </MenuButton>\n        <MenuList>\n          {options.map((el) => (\n            <MenuItem key={el.label} onSelect={() => setSelected(el)}>\n              {el.label}{\" \"}\n              {el.label === selectedLabel && (\n                <FaCheck color=\"rgba(173, 31, 234, 1)\" />\n              )}\n            </MenuItem>\n          ))}\n        </MenuList>\n      </Menu>\n    </Wrapper>\n  );\n};\n","import styled, { css } from \"styled-components\";\n\ninterface IProps {\n  error?: string;\n}\n\nexport const Wrapper = styled.div`\n  margin-top: 2.4rem;\n`;\n\nexport const Label = styled.label`\n  color: var(--dark-bravo);\n  font-weight: bold;\n  font-size: 1.3rem;\n  line-height: 1.9rem;\n  letter-spacing: -0.0180556rem;\n  display: block;\n  margin-bottom: 0.3rem;\n`;\n\nexport const Span = styled.span`\n  font-size: 1.3rem;\n  line-height: 1.9rem;\n  color: var(--dark-charlie);\n  display: block;\n  margin-bottom: 1.6rem;\n`;\n\ninterface IProps {\n  error?: string;\n}\nconst shared = css<IProps>`\n  background: var(--light-charlie);\n  border-radius: 0.5rem;\n  font-size: 1.5rem;\n  line-height: 2.2rem;\n  border: none;\n  padding: 1.3rem 2.4rem;\n  color: var(--dark-bravo);\n  border: ${({ error }) => (error ? \"1px solid var(--danger-alpha)\" : \"\")};\n  &:focus,\n  &:focus-visible {\n    outline-color: ${({ error }) =>\n      error ? \"1px solid var(--danger-alpha)\" : \"var(--primary-bravo)\"};\n  }\n`;\n\nexport const Input = styled.input<IProps>`\n  ${shared}\n  height: 4.8rem;\n  width: 100%;\n`;\n\nexport const TextArea = styled.textarea<IProps>`\n  ${shared}\n  min-width: 100%;\n  height: 8rem;\n`;\n\nexport const Error = styled.p`\n  color: var(--danger-alpha);\n  font-size: 1.4rem;\n  line-height: 2rem;\n  margin-top: 0.5rem;\n`;\n","import React from \"react\";\nimport {\n  Wrapper,\n  Label,\n  Span,\n  Input,\n  TextArea,\n  Error,\n} from \"./form-input.styles\";\n\ninterface IProps {\n  label: string;\n  description?: string;\n  id: string;\n  error?: string;\n  inputType: \"textarea\" | \"textfield\";\n  value: string;\n  onChange(val: string): void;\n}\n\nexport const FormInput: React.FC<IProps> = ({\n  label,\n  description,\n  id,\n  inputType,\n  error,\n  value,\n  onChange,\n}) => {\n  const handleChange = (\n    e:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.ChangeEvent<HTMLTextAreaElement>\n  ) => onChange(e.target.value);\n  return (\n    <Wrapper>\n      <Label htmlFor={id}>{label}</Label>\n      {description && <Span>{description}</Span>}\n      {inputType === \"textfield\" && (\n        <Input id={id} error={error} value={value} onChange={handleChange} />\n      )}\n      {inputType === \"textarea\" && (\n        <TextArea id={id} error={error} value={value} onChange={handleChange} />\n      )}\n      {error && <Error>{error}</Error>}\n    </Wrapper>\n  );\n};\n","import React from \"react\";\n\nimport { FaAngleLeft } from \"react-icons/fa\";\nimport { useLocation } from \"react-router-dom\";\nimport { Wrapper } from \"./styled-link.styles\";\n\ninterface CustomState {\n  from?: string;\n}\n\nexport const StyledLink = () => {\n  const location = useLocation();\n  let output = \"/\";\n\n  if (location && (location.state as CustomState)) {\n    const { from } = location.state as CustomState;\n    output = from || \"/\";\n  }\n\n  return (\n    <Wrapper to={output}>\n      <span className=\"icon-wrapper\">\n        <FaAngleLeft color=\"#647196\" />\n      </span>\n      Go Back\n    </Wrapper>\n  );\n};\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Wrapper = styled(Link)`\n  display: flex;\n  align-items: center;\n  color: white;\n  font-weight: 700;\n  font-size: 1.3rem;\n  line-height: 1.9rem;\n  gap: 1rem;\n  cursor: pointer;\n  text-decoration: none;\n  color: var(--dark-charlie);\n`;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 2.4rem 0;\n`;\n","import React from \"react\";\nimport { Wrapper } from \"./header.styles\";\nimport { StyledLink } from \"../../../../components/styled-link\";\n\nexport const Header = () => {\n  return (\n    <Wrapper>\n      <StyledLink />\n    </Wrapper>\n  );\n};\n","var _defs, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconNewFeedback(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 56,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"radialGradient\", {\n    cx: \"103.9%\",\n    cy: \"-10.387%\",\n    fx: \"103.9%\",\n    fy: \"-10.387%\",\n    r: \"166.816%\",\n    id: \"a\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#E84D70\",\n    offset: \"0%\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#A337F6\",\n    offset: \"53.089%\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#28A7ED\",\n    offset: \"100%\"\n  })))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    fill: \"url(#a)\",\n    cx: 28,\n    cy: 28,\n    r: 28\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#FFF\",\n    fillRule: \"nonzero\",\n    d: \"M30.343 36v-5.834h5.686v-4.302h-5.686V20h-4.597v5.864H20v4.302h5.746V36z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconNewFeedback);\nexport default __webpack_public_path__ + \"static/media/icon-new-feedback.de9414c7e4310cc4d4d562f2953c3da5.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\nimport media from \"styled-media-query\";\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1.6rem;\n  .add-feedback-btn {\n    width: 100%;\n  }\n  .cancel-btn {\n    width: 100%;\n  }\n\n  ${media.greaterThan(\"small\")`\n  display: grid;\n  gap: 1.6rem;\n  grid-template-columns: 1fr 15.8rem 14.4rem;\n\n  .cancel-btn {\n    grid-column-start: 2;\n    grid-column-end: 3;\n  }\n`}\n`;\n","import React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { useSetRecoilState } from \"recoil\";\nimport { useNavigate } from \"react-router-dom\";\nimport { requestsAPI } from \"../../../../state\";\n\nimport { Button, StyledLinkButton } from \"../../../../components/button\";\n\nimport { FormInput } from \"../../../../components/form-input\";\nimport { FormDropdown } from \"../../../../components/dropdowns\";\nimport { categoryOptions } from \"../../../../lib/constants\";\nimport NewIcon from \"../../../../assets/shared/icon-new-feedback.svg\";\n\nimport { Wrapper, Img, MenuWrapper } from \"../../../shared/styles\";\nimport { useLocationFrom } from \"../../../../lib/hooks\";\nimport { ButtonWrapper } from \"./feedback-form.styles\";\n\nexport const FeedbackForm = () => {\n  const setRequests = useSetRecoilState(requestsAPI);\n  const [selected, setSelected] = React.useState(categoryOptions[0]);\n  const [title, setTitle] = React.useState(\"\");\n  const [detail, setDetail] = React.useState(\"\");\n  const [{ from }] = useLocationFrom();\n  const navigate = useNavigate();\n\n  const handleSubmit = () => {\n    const output = {\n      id: nanoid(),\n      title: title,\n      category: selected.value,\n      upvotes: 0,\n      status: \"\",\n      description: detail,\n      comments: [],\n    };\n    setRequests((prev) => [...prev, output]);\n    navigate(\"/\");\n  };\n\n  return (\n    <Wrapper>\n      <Img src={NewIcon} alt=\"editIcon\" />\n      <h2>Create New Feedback</h2>\n\n      <FormInput\n        label=\"Feedback Title\"\n        description=\"Add a short descriptive headline\"\n        id=\"feedbackTitle\"\n        inputType=\"textfield\"\n        value={title}\n        onChange={setTitle}\n      />\n\n      <FormDropdown\n        selectedValue={selected}\n        setSelected={setSelected}\n        options={categoryOptions}\n        id=\"feedbackCategory\"\n        label=\"Category\"\n        description=\"Choose a category for your feedback\"\n      />\n\n      <FormInput\n        label=\"Feedback Detail\"\n        description=\"Include any specific comments on what should be improved, added, etc.\"\n        id=\"feedbackDetail\"\n        inputType=\"textarea\"\n        value={detail}\n        onChange={setDetail}\n      />\n      <MenuWrapper>\n        <ButtonWrapper>\n          <div className=\"cancel-btn\">\n            <StyledLinkButton variant=\"tertiary\" to={from || \"/\"}>\n              Cancel\n            </StyledLinkButton>\n          </div>\n          <div className=\"add-feedback-btn\">\n            <Button variant=\"primary\" onClick={handleSubmit}>\n              Add Feedback\n            </Button>\n          </div>\n        </ButtonWrapper>\n      </MenuWrapper>\n    </Wrapper>\n  );\n};\n","import React from \"react\";\nimport { ContentWrapper } from \"../../lib/styles\";\n\nimport { Header } from \"./components/header\";\nimport { FeedbackForm } from \"./components/feedback-form\";\n\nexport const NewFeedback = () => {\n  return (\n    <ContentWrapper>\n      <Header />\n      <FeedbackForm />\n    </ContentWrapper>\n  );\n};\n\nexport default NewFeedback;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  margin-top: 5.5rem;\n  padding: 4.4rem 2.4rem 2.4rem 2.4rem;\n  background-color: #fff;\n  border-radius: 1rem;\n  position: relative;\n`;\n\nexport const Img = styled.img`\n  position: absolute;\n  top: -2.4rem;\n  left: 2.4rem;\n`;\n\nexport const MenuWrapper = styled.div`\n  margin-top: 4rem;\n  display: flex;\n  gap: 1.6rem;\n  flex-direction: column;\n`;\n"],"names":["Wrapper","styled","values","label","value","orderBy","Dropdown","useRecoilState","sortByState","sortBy","setSortBy","className","map","el","onSelect","color","FormDropdown","props","description","id","options","selectedValue","setSelected","selectedLabel","htmlFor","Label","Span","shared","css","error","Input","TextArea","Error","FormInput","inputType","onChange","handleChange","e","target","StyledLink","location","useLocation","output","state","from","to","Link","Header","ButtonWrapper","media","FeedbackForm","setRequests","useSetRecoilState","requestsAPI","React","categoryOptions","selected","title","setTitle","detail","setDetail","useLocationFrom","navigate","useNavigate","src","NewIcon","alt","F","variant","onClick","nanoid","category","upvotes","status","comments","prev","NewFeedback","Img","MenuWrapper"],"sourceRoot":""}